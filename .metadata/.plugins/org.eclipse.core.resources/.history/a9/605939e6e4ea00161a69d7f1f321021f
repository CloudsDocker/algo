package com.todzhang;

/**
 * This is sample class from https://www.youtube.com/watch?v=M6lYob8STMI
 * @author todzhang
 *
 */
public class TreeTester<E extends Integer> {

	Node<E> root;
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

	public void addNode_Default(E key,String name){
		Node<E> newNode=new Node<E>(key, name);
		if(root==null){
			root=newNode;
		}
		else{
			Node<E> focusNode=root;
			Node<E> parent;
			while(true){
				parent=focusNode;
				if(key<focusNode.key){
					focusNode=focusNode.leftChild;
					if(focusNode==null){
						parent.leftChild=newNode;
						return;
					}
				}
				else {
					focusNode=focusNode.rightChild;
					if(focusNode==null){
						parent.rightChild=newNode;
						return;
					}
				}
			}
		}
	}
	
	public void addNode(E key,String name){
		Node<E> newNode=new Node<E>(key, name);
		if(root==null){
			root=newNode;
		}
		else{
			Node<E> focusNode=root;
			while(true){
				if(key<focusNode.key){
					focusNode=focusNode.leftChild;
					if(focusNode.leftChild==null){
						focusNode.leftChild=newNode;
						return;
					}
					else{
						focusNode=focusNode.leftChild;
					}
				}
				else {
					focusNode=focusNode.rightChild;
					if(focusNode.rightChild==null){
						focusNode.rightChild=newNode;
						return;
					}
					else{
						focusNode=focusNode.rightChild;
					}
				}
			}
		}
	}
	
	public class Node<E>{
		E key;
		String name;
		public Node(E inKey,String inName){
			this.key=inKey;
			this.name=inName;
		}
		
		Node<E> leftChild;
		Node<E> rightChild;
	}
}
