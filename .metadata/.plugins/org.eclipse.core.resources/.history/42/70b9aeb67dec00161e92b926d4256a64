package com.todzhang;

public class ToddLinkedBinaryTree<T> extends ToddAbstractBinaryTree<T> {

	/*
	 * nested Node class
	 */
	protected static class Node<T> implements Position<T>{

		private T element;  // an element stored in this node
		private Node<T> parent;	// a reference to parent (if any)
		private Node<T> left; 	// a reference to the left child (if any)
		private Node<T> right; 	// a reference to the right child (if any)
		
		
		public Node(T element, Node<T> parent, Node<T> left, Node<T> right) {
			super();
			this.element = element;
			this.parent = parent;
			this.left = left;
			this.right = right;
		}


		@Override
		public T getElement() {
			// TODO Auto-generated method stub
			return element;
		}
		
		//accessor method
		public Node<T> getParent(){return this.parent;}
		public Node<T> getLeft(){return this.left;};
		public Node<T> getRight(){return this.right;}
		
	}
}
